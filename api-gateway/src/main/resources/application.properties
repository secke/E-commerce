spring.application.name=api-gateway

# Cloud Gateway Routes
# User-service routes config
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/users/**

# User-service routes config
spring.cloud.gateway.routes[1].id=product-service
spring.cloud.gateway.routes[1].uri=lb://PRODUCT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/products/**

#media-service routes config
spring.cloud.gateway.routes[2].id=media-service
spring.cloud.gateway.routes[2].uri=lb://MEDIA-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/media/**


# Server Configuration
server.port=4000

# Eureka client configuration
#eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Important Docker-specific settings
eureka.instance.preferIpAddress=true
eureka.instance.instanceId=${spring.application.name}:${server.port:${random.value}}

spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Enable Debug Logging
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=DEBUG

# Disable security auto-configurations
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,\
  org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration

# Explicitly disable default security
spring.security.user.name=none
spring.security.user.password=none
# Disable Spring Boot's default security
#spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration


# RESOLVE THE CONFLIC BETWEEN MVC AND SPRING-CLOUD (Ensure reactive web application)
spring.main.web-application-type=reactive

spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,DELETE,PUT,OPTIONS,PATCH

spring.web.resources.static-locations=classpath:/static/

