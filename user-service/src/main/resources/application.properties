spring.application.name=user-service

# MongoDB Configuration
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
spring.data.mongodb.database=user_service_db
#spring.datasource.url=jdbc:mongodb
spring.data.mongodb.uri=mongodb://localhost:27017
# Disable auto-configuration for SQL datasource
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
# Server port (optional, default is 8080)
server.port=8089
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Optional: Enable MongoDB query logging
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

# 3. Configure SSL in application.properties

# server.ssl.key-alias=lets_play
# server.ssl.key-store=classpath:keystore.p12
# server.ssl.key-store-password=123456789
# server.ssl.key-store-type=PKCS12

# EUREKA

# Eureka client configuration
# Eureka host for remote service(E.g: Docker)
#eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
# Eureka host for local service
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true

# Important Docker-specific settings
eureka.instance.preferIpAddress=true
eureka.instance.instanceId=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Kafka broker address
spring.kafka.bootstrap-servers=localhost:9092

# Consumer properties
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Producer properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

spring.jackson.deserialization.fail-on-unknown-properties=false
spring.jackson.serialization.fail-on-empty-beans=false