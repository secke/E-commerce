spring.application.name=product-service

# MongoDB Configuration
#spring.data.mongodb.host=localhost
#spring.data.mongodb.port=27017
spring.data.mongodb.database=product_service_db
#spring.datasource.url=jdbc:mongodb
spring.data.mongodb.uri=mongodb://localhost:27017
# Disable auto-configuration for SQL datasource
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration
# Server port (optional, default is 8080)
server.port=8090
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
# Optional: Enable MongoDB query logging
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

# EUREKA
# Eureka client configuration
#eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka/
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true


# Kafka broker address
spring.kafka.bootstrap-servers=localhost:9092


# Consumer properties
spring.kafka.consumer.group-id=user-service-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.listener.auto-startup=true


# Producer properties
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
eureka.instance.preferIpAddress=true
eureka.instance.instanceId=${spring.application.name}:${server.port:${random.value}}

logging.level.org.springframework.security=DEBUG

spring.web.resources.static-locations=file:/home/secke/Desktop/seckeZ01/full_stack_java/buy-01/media-service/src/main/resources/static/uploads/