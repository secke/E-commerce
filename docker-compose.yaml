# version: '3.8'

# services:
#   zookeeper:
#     image: 'confluentinc/cp-zookeeper:7.0.1'
#     container_name: zookeeper
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#     ports:
#       - "2181:2181"
#     networks:
#       - microservices-network

#   kafka:
#     image: 'confluentinc/cp-kafka:7.0.1'
#     container_name: kafka
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#     depends_on:
#       - zookeeper
#     networks:
#       - microservices-network

# networks:
#   microservices-network:
#     name: microservices-network
#     driver: bridge


version: '3.8'

services:
  #api gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "4000:4000"
    environment:
      # Add these for better Eureka integration
      - SPRING_APPLICATION_NAME=api-gateway
    depends_on:
      - eureka-server
    networks: 
      - microservices-network

  # Eureka Server
  eureka-server:
    build: ./service-registry
    ports:
      - "8761:8761"
    container_name: eureka-server
    networks:
      - microservices-network

  # Media Service
  # media-service:
  #   build: ./media-service
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017
  #     - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
  #     - SPRING_APPLICATION_NAME=media-service
  #   depends_on:
  #     - mongodb
  #     - kafka
  #   networks:
  #     - spring-mongo-network
  #     - microservices-network

  # Product Service
  product-service:
    build: ./product-service
    ports:
      - "8090:8090"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_APPLICATION_NAME=product-service
    depends_on:
      - mongodb
      - kafka
      - eureka-server
    networks:
      - spring-mongo-network
      - microservices-network

  # MongoDB
  mongodb:
    image: mongo:latest
    container_name: mongodb
    volumes:
      - mongodb_data:/data/db
    networks:
      - spring-mongo-network

  # Kafka
  kafka:
    image: 'confluentinc/cp-kafka:7.0.1'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - microservices-network

  # Zookeeper
  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.0.1'
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - microservices-network

networks:
  # Networks to be used across services
  spring-mongo-network:
    driver: bridge
  microservices-network:
    external: true

volumes:
  mongodb_data:
